server:
  port: 8054
  servlet:
    context-path: /invetory
spring:
  application:
    name: invetory
  data:
    mongodb:
      uri: ${MONGODB_CONNECTION_URL:mongodb://root:example@localhost:27017/inventory?authSource=admin}

  rabbitmq:
    host: ${RABBIT_HOST:localhost}
    port: ${RABBIT_PORT:5672}
    username: ${RABBIT_USERNAME:guest}
    password: ${RABBIT_PASSWORD:guest}

    # https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream-binder-rabbit.html#_rabbitmq_consumer_properties
    cloud:
      function:
        definition: pedidoCriado;
      stream:
        bindings:
          pedidoCriado-in-0:
            destination: pedido-criado
            group: inventory-ms

          pedidoReservado-out-0:
            destination: pedido-reservado
          pedidoRecusado-out-0:
            destination: pedido-recusado
        rabbit:
          bindings:
            # CONSUMER
            pedidoCriado-in-0:
              consumer:
                exchangeType: fanout
                autoBindDlq: true
                deadLetterExchange: inventory-processing-error
                deadLetterExchangeType: fanout
                dlqMaxLength: 100
                dlqTtl: 120000

            # PRODUCER
            pedidoReservado-out-0:
              producer:
                exchangeType: fanout
            pedidoRecusado-out-0:
              producer:
                exchangeType: fanout
        binders:
          rabbitmq:
            type: rabbit
            environment:
              spring:
                rabbitmq:
                  host: ${RABBIT_HOST:localhost}
                  port: ${RABBIT_PORT:5672}
                  username: ${RABBIT_USERNAME:guest}
                  password: ${RABBIT_PASSWORD:guest}
                  virtual-host: /

eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/